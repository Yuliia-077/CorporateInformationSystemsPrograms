@page "/teachers"
@using RatingStudents.Data
@inject TeacherService teacherService

<NavLink class="nav-link" href="addTeacher">
    <span class="oi oi-plus" aria-hidden="true"></span>Add new
</NavLink>

<h1>Teacher information</h1>
@if (teachers == null)
{
    <p><em>Loading ...</em></p>
}
else
{
<table class="table-bordered text-center">
    <thead>
        <tr>
            <th>Id </th>
            <th>Last name </th>
            <th>First name </th>
            <th>Middle name </th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var rat in teachers)
        {
            <tr>
                <td>@rat.Id</td>
                <td>@rat.LastName</td>
                <td>@rat.FirstName</td>
                <td>@rat.MiddleName</td>
                <td><a class="nav-link" href="editTeacher/@rat.Id">Edit</a></td>
                <td><a class="nav-link" href="deleteTeacher/@rat.Id">Delete</a></td>
            </tr>
        }
    </tbody>
</table>

}

@code {
        List<RatingStudents.Data.Teacher> teachers;
    protected override async Task OnInitializedAsync()
    {
        teachers = await Task.Run(() => teacherService.GetTeachers());
    }
}
